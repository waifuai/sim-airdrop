[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sim-airdrop"
version = "0.1.0"
description = "A comprehensive simulation framework for analyzing token airdrop strategies and their impact on market dynamics"
authors = [
    {name = "Airdrop Simulation Team", email = "thewaifuai@users.noreply.github.com"}
]
license = {text = "MIT-0"}
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "scipy>=1.7.0",
    "plotly>=5.0.0",
    "click>=8.0.0",
    "tqdm>=4.64.0",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT-0 License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Office/Business :: Financial",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "coverage>=6.0.0",
]
dev = [
    "black>=22.0.0",
    "flake8>=4.0.0",
    "isort>=5.0.0",
    "mypy>=0.950",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
dashboard = [
    "dash>=2.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]

[project.scripts]
sim-airdrop = "src.cli:cli"

[project.urls]
Homepage = "https://github.com/waifuai/sim-airdrop"
Documentation = "https://github.com/waifuai/sim-airdrop"
Repository = "https://github.com/waifuai/sim-airdrop.git"
Issues = "https://github.com/waifuai/sim-airdrop/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["src/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --cov=src --cov-report=html --cov-report=term"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true